{"version":3,"sources":["reducers/notificationReducer.js","components/BlogForm.js","components/Togglable.js","components/BlogPage.js","components/Notification.js","components/LoginForm.js","components/Users.js","services/blogs.js","reducers/blogReducer.js","components/Blog.js","services/login.js","reducers/userReducer.js","components/User.js","services/users.js","reducers/usersReducer.js","components/Home.js","App.js","store.js","index.js"],"names":["t","BlogForm","handleBlogAddition","useState","blogTitle","setBlogTitle","blogAuthor","setBlogAuthor","blogUrl","setBlogUrl","onSubmit","event","preventDefault","title","author","url","TextField","required","label","variant","size","type","value","id","onChange","target","Button","color","style","marginTop","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","onClick","buttonLabel","children","BlogPage","blogs","blogFormRef","List","sort","a","b","likes","map","blog","ListItem","dense","key","ListItemIcon","ListItemText","to","Notification","notification","useSelector","state","msg","Alert","severity","LoginForm","handleLogin","username","setUsername","password","setPassword","name","Users","users","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","user","length","baseUrl","token","getAll","axios","get","response","data","setToken","newToken","create","blogObject","config","headers","Authorization","post","update","newBlogObject","put","remove","blogId","delete","createComment","createBlog","obj","dispatch","blogService","newBlog","deleteBlog","likeBlog","likedBlog","blogReducer","action","comments","filter","Blog","handleNotice","history","useHistory","useDispatch","removeBlog","window","confirm","push","console","log","comment","updatedBlog","reset","handleLike","Card","padding","href","rel","cmt","login","credentials","notificationReducer","setUser","userReducer","User","usersReducer","Home","App","useEffect","userService","loggedUserJSON","localStorage","getItem","JSON","parse","loginService","setItem","stringify","current","message","status","clearTimeout","setTimeout","useRef","match","useRouteMatch","user_","find","params","matchBlog","blog_","Container","AppBar","position","background","marginBottom","Toolbar","Grid","container","justify","item","Link","Typography","marginRight","clear","e","exact","path","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23a16c34.chunk.js","sourcesContent":["var t\r\n\r\nconst notificationReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case 'NOTIFICATION':\r\n            return action.data\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setNotification = (msg) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n          type: 'NOTIFICATION',\r\n          data: {msg}\r\n        })\r\n  \r\n        clearTimeout(t)\r\n  \r\n        t = setTimeout(() => {\r\n          dispatch({\r\n            type: 'NOTIFICATION',\r\n            data: null\r\n        })}, 4000)\r\n    }\r\n}\r\n\r\nexport default notificationReducer","import { Button, TextField } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\n\r\nconst BlogForm = ({ handleBlogAddition }) => {\r\n\r\n  const [blogTitle, setBlogTitle] = useState('')\r\n  const [blogAuthor, setBlogAuthor] = useState('')\r\n  const [blogUrl, setBlogUrl] = useState('')\r\n\r\n  const addBlog = (event) => {\r\n    event.preventDefault()\r\n\r\n    handleBlogAddition({\r\n      title: blogTitle,\r\n      author: blogAuthor,\r\n      url: blogUrl,\r\n    })\r\n\r\n    setBlogAuthor('')\r\n    setBlogTitle('')\r\n    setBlogUrl('')\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={addBlog}>\r\n      <TextField required label=\"Title\" variant=\"filled\" size=\"small\" \r\n                 type=\"text\" value={blogTitle} id=\"title\"\r\n                 onChange={({ target }) => setBlogTitle(target.value)} /> <br />\r\n      <TextField required label=\"Author\" variant=\"filled\" size=\"small\" \r\n                 type=\"text\" value={blogAuthor} id=\"author\"\r\n                 onChange={({ target }) => setBlogAuthor(target.value)} /> <br />\r\n      <TextField required label=\"URL\" variant=\"filled\" size=\"small\" \r\n                 type=\"text\" value={blogUrl} id=\"url\"\r\n                 onChange={({ target }) => setBlogUrl(target.value)} /> <br />\r\n\r\n      <Button variant=\"contained\" type=\"submit\" color=\"primary\" style={{ marginTop: 15 }}>Create</Button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default BlogForm","import { Button } from '@material-ui/core'\r\nimport React, { useState, useImperativeHandle } from 'react'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  // Make the function available outside of the component\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <Button variant=\"contained\" onClick={toggleVisibility}>{props.buttonLabel}</Button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={toggleVisibility}>Cancel</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Togglable","import BlogForm from './BlogForm'\r\nimport Togglable from './Togglable'\r\nimport React from 'react'\r\nimport StarRateTwoToneIcon from '@material-ui/icons/StarRateTwoTone'\r\nimport { List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\r\nimport { Link  } from 'react-router-dom'\r\n\r\nconst BlogPage = ( { blogs, handleBlogAddition, blogFormRef } ) => {\r\n    \r\n    return (\r\n        <div>\r\n            <Togglable buttonLabel = \"Create a new blog\" ref={blogFormRef}>\r\n                <BlogForm handleBlogAddition = {handleBlogAddition} />\r\n            </Togglable>\r\n\r\n            <h2>Blogs</h2>\r\n            <List>\r\n                {blogs.sort((a, b) => b.likes - a.likes)\r\n                .map(blog => \r\n                    <ListItem dense key={blog.id}>\r\n                        <ListItemIcon><StarRateTwoToneIcon /></ListItemIcon>\r\n                        <ListItemText>\r\n                            <Link to={`/blogs/${blog.id}`}>{blog.title} by {blog.author}</Link>\r\n                        </ListItemText>\r\n                    </ListItem>\r\n                )}\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogPage","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\nconst Notification = () => {\r\n  const notification = useSelector(state => state.notification)\r\n\r\n  if (notification === null) {\r\n    return null\r\n  } else {\r\n    return (\r\n      <div>\r\n        {notification.msg[1] ? <Alert severity=\"success\">{notification.msg[0]}</Alert>\r\n                             : <Alert severity=\"error\">{notification.msg[0]}</Alert>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Notification","import { Button, TextField } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport Togglable from './Togglable'\r\n\r\nconst LoginForm = ( { handleLogin } ) => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const login = (event) => {\r\n    event.preventDefault()\r\n\r\n    handleLogin(username, password)\r\n    setUsername('')\r\n    setPassword('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Blog Portal</h2>\r\n      <Togglable buttonLabel = \"Magic Gate\">\r\n        <h4>Log in to this awesome Application</h4>\r\n        <form onSubmit={login}>\r\n          <div>\r\n            <TextField label=\"Username\" variant=\"filled\" size=\"small\" \r\n                      type=\"text\" value={username} id=\"username\" name=\"Username\"\r\n                      onChange={({ target }) => setUsername(target.value)} />\r\n          </div>\r\n          <div>\r\n            <TextField label=\"Password\" variant=\"filled\" size=\"small\" \r\n                      type=\"password\" value={password} id=\"password\" name=\"Password\"\r\n                      onChange={({ target }) => setPassword(target.value)} />\r\n          </div>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">Login</Button>\r\n        </form>\r\n      </Togglable>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import React from \"react\";\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Users = ({users}) => {\r\n\r\n    return (\r\n        <div>\r\n            <h2>Users</h2>\r\n            <TableContainer component={Paper}>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>User</TableCell>\r\n                            <TableCell>Number of blogs</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {users.map(user => {\r\n                            return (\r\n                                <TableRow key={user.username}>\r\n                                    <TableCell><Link to={`/users/${user.id}`}>{user.name}</Link></TableCell>\r\n                                    <TableCell>{user.blogs.length}</TableCell>\r\n                                </TableRow>\r\n                            )})\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst create = async blogObject => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, blogObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async newBlogObject => {\r\n  const response = await axios.put(`${baseUrl}/${newBlogObject.id}`, newBlogObject)\r\n  return response.data\r\n}\r\n\r\nconst remove = async blogId => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n\r\n  return await axios.delete(`${baseUrl}/${blogId}`, config)\r\n}\r\n\r\nconst createComment = async blogObject => {\r\n  const response = await axios.put(`${baseUrl}/${blogObject.id}/comments`, blogObject)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll, setToken, create, update, remove, createComment }","import blogService from '../services/blogs'\r\n\r\nconst blogReducer = (state = [], action) => {\r\n\r\n    switch (action.type) {\r\n        case 'INITIALIZATION':\r\n            return action.data.blogs\r\n\r\n        case 'CREATE_BLOG':\r\n            return [...state, action.data.newBlog]\r\n\r\n        case 'ADD_COMMENT':\r\n            return state.map(blog => blog.id !== action.data.id ? blog : { ...blog, comments: action.data.comments})\r\n\r\n        case 'DELETE_BLOG':\r\n            return state.filter(blog => blog.id !== action.data.id)\r\n\r\n        case 'LIKE_BLOG':\r\n            return state.map(blog => blog.id === action.data.id ? { ...blog, likes: action.data.likes } : blog)\r\n                \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initBlogs = () => {\r\n    return async dispatch => {\r\n        const blogs = await blogService.getAll()\r\n\r\n        dispatch({\r\n          type: 'INITIALIZATION',\r\n          data: {blogs}\r\n        })\r\n    }\r\n}\r\n\r\nexport const createBlog = (obj) => {\r\n    return async dispatch => {\r\n        const newBlog = await blogService.create(obj)\r\n\r\n        dispatch({\r\n          type: 'CREATE_BLOG',\r\n          data: {newBlog}\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteBlog = (id) => {\r\n    return async dispatch => {\r\n        await blogService.remove(id)\r\n\r\n        dispatch({\r\n          type: 'DELETE_BLOG',\r\n          data: {id}\r\n        })\r\n    }\r\n}\r\n\r\nexport const addComment = (obj) => {\r\n    return async dispatch => {\r\n        const updatedBlog = await blogService.createComment(obj)\r\n\r\n        dispatch({\r\n          type: 'ADD_COMMENT',\r\n          data: updatedBlog\r\n        })\r\n    }\r\n}\r\n\r\nexport const likeBlog = (obj) => {\r\n    return async dispatch => {\r\n        const likedBlog = await blogService.update(obj)\r\n\r\n        dispatch({\r\n          type: 'LIKE_BLOG',\r\n          data: likedBlog\r\n        })\r\n    }\r\n}\r\n\r\nexport default blogReducer","import { Button, Card, TextField } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addComment, deleteBlog, likeBlog } from '../reducers/blogReducer'\r\n\r\nconst Blog = ( { blog, user, handleNotice } ) => {\r\n\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n\r\n  if (!blog) {\r\n    return null\r\n  }\r\n\r\n  const removeBlog = async () => {\r\n    if (window.confirm(`Delete ${blog.title} by ${blog.author}?`)) {\r\n      try {\r\n        await dispatch(deleteBlog(blog.id))\r\n        handleNotice('Deleted successfully.', true)\r\n        history.push('/blogs')\r\n      } catch (e) {\r\n        console.log(e)\r\n        handleNotice('Cannot delete!', false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const createComment = event => {\r\n    event.preventDefault()\r\n    dispatch(addComment({...blog, comments: [...blog.comments, event.target.comment.value]}))\r\n    handleNotice('Your comment has been added!', true)\r\n    event.target.reset()\r\n  }\r\n\r\n  const handleLike = async () => {\r\n    try {\r\n      await dispatch(likeBlog({ ...blog, likes: blog.likes + 1 }))\r\n    } catch (e) {\r\n      handleNotice('No like added!', false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card style={{ padding: 20 }}>\r\n        <h2>{blog.title} by {blog.author}</h2>\r\n        URL: <a href={blog.url} target=\"_blank\" rel=\"noopener noreferrer\">{blog.url}</a><br/>\r\n        Likes: {blog.likes} <br/>\r\n        Added by {blog.user.name} <br/>\r\n        <h4>Comments</h4>\r\n\r\n        <form onSubmit={ (event) => createComment(event) }>\r\n          <TextField required name=\"comment\" variant=\"filled\" size=\"small\" \r\n                     type=\"text\" label=\"Comment\"/>\r\n          <Button variant=\"contained\" type=\"submit\" color=\"primary\">Add</Button>\r\n        </form>\r\n\r\n        <ul>\r\n          {blog.comments && blog.comments.map(cmt => (\r\n            <li key={cmt}>{cmt}</li>\r\n          ))}\r\n        </ul>\r\n\r\n        <div style={{ marginTop: 15 }}>\r\n          <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={handleLike}>Like</Button>\r\n          {user.username === blog.user.username && <Button variant=\"contained\" size=\"small\" color=\"secondary\" onClick={removeBlog}>Delete</Button>}\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","const userReducer = (state = null, action) => {\r\n    switch(action.type) {\r\n        case 'CREATE_USER':\r\n            return action.data.user\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUser = (user) => {\r\n    return {\r\n        type: 'CREATE_USER',\r\n        data: {user}\r\n    }\r\n}\r\n\r\nexport default userReducer","import { List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\r\nimport BookIcon from '@material-ui/icons/Book'\r\nimport React from \"react\";\r\n\r\nconst User = ({ user }) => {\r\n\r\n    if (!user) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Author: {user.name}</h2>\r\n            <h4>Added Blogs</h4>\r\n\r\n            <List>\r\n                {user.blogs.map(blog =>\r\n                    <ListItem dense key={blog.id}>\r\n                        <ListItemIcon><BookIcon /></ListItemIcon>\r\n                        <ListItemText> {blog.title} </ListItemText>\r\n                    </ListItem>\r\n                )}\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll }","import userService from \"../services/users\"\r\n\r\nconst usersReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'INIT_USERS':\r\n            return action.data.users\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initUsers = () => {\r\n    return async dispatch => {\r\n        const users = await userService.getAll()\r\n\r\n        dispatch({\r\n            type: 'INIT_USERS',\r\n            data: {users}\r\n        })\r\n    }\r\n}\r\n\r\nexport default usersReducer","import React from 'react'\r\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\r\n\r\nconst Home = () => {\r\n    \r\n    return (\r\n        <div>\r\n            <TagFacesIcon/>\r\n            <div>This blog was created with Node.js + Express and React + Redux. The data is persisted on MongoDB.</div>\r\n            <div>The styling was added using the Material-UI library.</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BlogPage from './components/BlogPage'\r\nimport Notification from './components/Notification'\r\nimport LoginForm from './components/LoginForm'\r\nimport Users from './components/Users'\r\nimport Blog from './components/Blog'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\nimport { setNotification } from './reducers/notificationReducer'\r\nimport { createBlog, initBlogs } from './reducers/blogReducer'\r\nimport { setUser } from './reducers/userReducer'\r\nimport { Switch, Route, Link, useRouteMatch } from \"react-router-dom\"\r\nimport { AppBar, Button, Container, Grid, Toolbar, Typography } from \"@material-ui/core\";\r\nimport User from './components/User'\r\nimport { initUsers } from './reducers/usersReducer'\r\nimport Home from './components/Home'\r\n\r\nconst App = () => {\r\n  const blogs = useSelector(state => state.blogs)\r\n  const user = useSelector(state => state.user)\r\n  const users = useSelector(state => state.users)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(initBlogs())\r\n    dispatch(initUsers())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      blogService.setToken(user.token)\r\n      dispatch(setUser(user))\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const handleLogin = async (username, password) => {\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password\r\n      })\r\n      // Must convert to DOMstrings before saving to the storage\r\n      window.localStorage.setItem(\r\n        'loggedUser', JSON.stringify(user)\r\n      )\r\n\r\n      await dispatch(setUser(user))\r\n      blogService.setToken(user.token)\r\n      handleNotice('Logged in successfully', true)\r\n    } catch (e) {\r\n      handleNotice('Wrong username and/or password!', false)\r\n    }\r\n  }\r\n\r\n  const handleLogOut = (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      window.localStorage.clear()\r\n      dispatch(setUser(null))\r\n      handleNotice('Logged out successfully', true)\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const handleBlogAddition = async (blogObject) => {\r\n    try {\r\n      // Control the togglevisibility of the Togglable component\r\n      blogFormRef.current.toggleVisibility()\r\n      await dispatch(createBlog(blogObject))\r\n      handleNotice(`A new blog titled \"${blogObject.title}\" by ${blogObject.author} created successfully`, true)\r\n    } catch (e) {\r\n      handleNotice('No new blog created!', false)\r\n    }\r\n  }\r\n\r\n  const handleNotice = (message, status) => {\r\n    dispatch(setNotification([message, status]))\r\n  }\r\n\r\n  const blogFormRef = useRef()\r\n  const match = useRouteMatch('/users/:id')\r\n  const user_ = match ? users.find(user => user.id === match.params.id)\r\n                      : null\r\n  const matchBlog = useRouteMatch('/blogs/:id')\r\n  const blog_ = matchBlog ? blogs.find(blog => blog.id === matchBlog.params.id)\r\n                          : null\r\n\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <Notification />\r\n        \r\n        {!user ? <LoginForm handleLogin = {handleLogin}/>\r\n               : \r\n                 <div>\r\n                    <AppBar position=\"sticky\" style={{ background: '#8bc34a', marginBottom: 25 }}>\r\n                      <Toolbar>\r\n                        <Grid container justify=\"space-between\">\r\n                          <Grid item>\r\n                            <Button color=\"inherit\" component={Link} to=\"/\">Home</Button>\r\n                            <Button color=\"inherit\" component={Link} to=\"/blogs\">Blogs</Button>\r\n                            <Button color=\"inherit\" component={Link} to=\"/users\">Users</Button>\r\n                          </Grid>\r\n                          <Grid item>\r\n                            <Typography display=\"inline\" style={{ marginRight: 16 }}><b>{user.name}</b> logged in.</Typography>\r\n                            <Button color=\"secondary\" variant=\"contained\" onClick={handleLogOut}>Log out</Button>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Toolbar>\r\n                    </AppBar>\r\n                    \r\n                    <Switch>\r\n                      <Route exact path=\"/users\">\r\n                        <Users users={users} />\r\n                      </Route>\r\n                      <Route path=\"/users/:id\">\r\n                        <User user={user_}/>\r\n                      </Route>\r\n                      <Route exact path='/blogs'>\r\n                        <BlogPage blogs={blogs} blogFormRef={blogFormRef} handleBlogAddition={handleBlogAddition}/>\r\n                      </Route>\r\n                      <Route path=\"/blogs/:id\">\r\n                        <Blog user={user} blog={blog_} handleNotice={handleNotice}/>\r\n                      </Route>       \r\n                      <Route path=\"/\">\r\n                        <Home />\r\n                      </Route>                 \r\n                    </Switch>\r\n                 </div>\r\n        }\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport notificationReducer from './reducers/notificationReducer'\r\nimport blogReducer from './reducers/blogReducer'\r\nimport userReducer from './reducers/userReducer'\r\nimport usersReducer from './reducers/usersReducer'\r\n\r\nconst reducer = combineReducers({\r\n    notification: notificationReducer,\r\n    blogs: blogReducer,\r\n    user: userReducer,\r\n    users: usersReducer\r\n})\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk))\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport store from './store'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router } from \"react-router-dom\"\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </Router>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}